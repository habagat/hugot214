Created by PLY version 3.6 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> progStart
Rule 1     progStart -> programHeading OPENCURLY decl statement endprog CLOSECURLY
Rule 2     progStart -> programHeading
Rule 3     programHeading -> MAIN OPENPAR CLOSEPAR
Rule 4     decl -> type ID EOL
Rule 5     decl -> empty
Rule 6     decl -> type ID ASSIGN expression EOL
Rule 7     type -> INTN
Rule 8     type -> FLOATN
Rule 9     type -> CHARN
Rule 10    type -> STRINGN
Rule 11    type -> BOOLN
Rule 12    statement -> PRINT OPENPAR STRING CLOSEPAR EOL
Rule 13    statement -> PRINT OPENPAR statement CLOSEPAR EOL
Rule 14    statement -> ID ASSIGN expression EOL
Rule 15    statement -> expression
Rule 16    expression -> expression PLUS expression
Rule 17    expression -> expression MINUS expression
Rule 18    expression -> expression MUL expression
Rule 19    expression -> expression DIV expression
Rule 20    expression -> expression MOD expression
Rule 21    expression -> MINUS expression
Rule 22    expression -> OPENPAR expression CLOSEPAR
Rule 23    expression -> INT
Rule 24    expression -> FLOAT
Rule 25    expression -> ID
Rule 26    empty -> <empty>
Rule 27    endprog -> END INT EOL

Terminals, with rules where they appear

ASSIGN               : 6 14
BOOLN                : 11
CHARN                : 9
CLOSECURLY           : 1
CLOSEPAR             : 3 12 13 22
DIV                  : 19
END                  : 27
EOL                  : 4 6 12 13 14 27
FLOAT                : 24
FLOATN               : 8
ID                   : 4 6 14 25
INT                  : 23 27
INTN                 : 7
MAIN                 : 3
MINUS                : 17 21
MOD                  : 20
MUL                  : 18
OPENCURLY            : 1
OPENPAR              : 3 12 13 22
PLUS                 : 16
PRINT                : 12 13
STRING               : 12
STRINGN              : 10
error                : 

Nonterminals, with rules where they appear

decl                 : 1
empty                : 5
endprog              : 1
expression           : 6 14 15 16 16 17 17 18 18 19 19 20 20 21 22
progStart            : 0
programHeading       : 1 2
statement            : 1 13
type                 : 4 6

Parsing method: LALR

state 0

    (0) S' -> . progStart
    (1) progStart -> . programHeading OPENCURLY decl statement endprog CLOSECURLY
    (2) progStart -> . programHeading
    (3) programHeading -> . MAIN OPENPAR CLOSEPAR

    MAIN            shift and go to state 3

    programHeading                 shift and go to state 1
    progStart                      shift and go to state 2

state 1

    (1) progStart -> programHeading . OPENCURLY decl statement endprog CLOSECURLY
    (2) progStart -> programHeading .

    OPENCURLY       shift and go to state 4
    $end            reduce using rule 2 (progStart -> programHeading .)


state 2

    (0) S' -> progStart .



state 3

    (3) programHeading -> MAIN . OPENPAR CLOSEPAR

    OPENPAR         shift and go to state 5


state 4

    (1) progStart -> programHeading OPENCURLY . decl statement endprog CLOSECURLY
    (4) decl -> . type ID EOL
    (5) decl -> . empty
    (6) decl -> . type ID ASSIGN expression EOL
    (7) type -> . INTN
    (8) type -> . FLOATN
    (9) type -> . CHARN
    (10) type -> . STRINGN
    (11) type -> . BOOLN
    (26) empty -> .

    INTN            shift and go to state 6
    FLOATN          shift and go to state 11
    CHARN           shift and go to state 8
    STRINGN         shift and go to state 12
    BOOLN           shift and go to state 7
    PRINT           reduce using rule 26 (empty -> .)
    ID              reduce using rule 26 (empty -> .)
    MINUS           reduce using rule 26 (empty -> .)
    OPENPAR         reduce using rule 26 (empty -> .)
    INT             reduce using rule 26 (empty -> .)
    FLOAT           reduce using rule 26 (empty -> .)

    decl                           shift and go to state 9
    type                           shift and go to state 10
    empty                          shift and go to state 13

state 5

    (3) programHeading -> MAIN OPENPAR . CLOSEPAR

    CLOSEPAR        shift and go to state 14


state 6

    (7) type -> INTN .

    ID              reduce using rule 7 (type -> INTN .)


state 7

    (11) type -> BOOLN .

    ID              reduce using rule 11 (type -> BOOLN .)


state 8

    (9) type -> CHARN .

    ID              reduce using rule 9 (type -> CHARN .)


state 9

    (1) progStart -> programHeading OPENCURLY decl . statement endprog CLOSECURLY
    (12) statement -> . PRINT OPENPAR STRING CLOSEPAR EOL
    (13) statement -> . PRINT OPENPAR statement CLOSEPAR EOL
    (14) statement -> . ID ASSIGN expression EOL
    (15) statement -> . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . MINUS expression
    (22) expression -> . OPENPAR expression CLOSEPAR
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . ID

    PRINT           shift and go to state 20
    ID              shift and go to state 21
    MINUS           shift and go to state 18
    OPENPAR         shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 17

    expression                     shift and go to state 15
    statement                      shift and go to state 16

state 10

    (4) decl -> type . ID EOL
    (6) decl -> type . ID ASSIGN expression EOL

    ID              shift and go to state 23


state 11

    (8) type -> FLOATN .

    ID              reduce using rule 8 (type -> FLOATN .)


state 12

    (10) type -> STRINGN .

    ID              reduce using rule 10 (type -> STRINGN .)


state 13

    (5) decl -> empty .

    PRINT           reduce using rule 5 (decl -> empty .)
    ID              reduce using rule 5 (decl -> empty .)
    MINUS           reduce using rule 5 (decl -> empty .)
    OPENPAR         reduce using rule 5 (decl -> empty .)
    INT             reduce using rule 5 (decl -> empty .)
    FLOAT           reduce using rule 5 (decl -> empty .)


state 14

    (3) programHeading -> MAIN OPENPAR CLOSEPAR .

    OPENCURLY       reduce using rule 3 (programHeading -> MAIN OPENPAR CLOSEPAR .)
    $end            reduce using rule 3 (programHeading -> MAIN OPENPAR CLOSEPAR .)


state 15

    (15) statement -> expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression

    END             reduce using rule 15 (statement -> expression .)
    CLOSEPAR        reduce using rule 15 (statement -> expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 27
    MUL             shift and go to state 28
    DIV             shift and go to state 24
    MOD             shift and go to state 26


state 16

    (1) progStart -> programHeading OPENCURLY decl statement . endprog CLOSECURLY
    (27) endprog -> . END INT EOL

    END             shift and go to state 29

    endprog                        shift and go to state 30

state 17

    (24) expression -> FLOAT .

    EOL             reduce using rule 24 (expression -> FLOAT .)
    PLUS            reduce using rule 24 (expression -> FLOAT .)
    MINUS           reduce using rule 24 (expression -> FLOAT .)
    MUL             reduce using rule 24 (expression -> FLOAT .)
    DIV             reduce using rule 24 (expression -> FLOAT .)
    MOD             reduce using rule 24 (expression -> FLOAT .)
    CLOSEPAR        reduce using rule 24 (expression -> FLOAT .)
    END             reduce using rule 24 (expression -> FLOAT .)


state 18

    (21) expression -> MINUS . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . MINUS expression
    (22) expression -> . OPENPAR expression CLOSEPAR
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . ID

    MINUS           shift and go to state 18
    OPENPAR         shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 17
    ID              shift and go to state 32

    expression                     shift and go to state 31

state 19

    (22) expression -> OPENPAR . expression CLOSEPAR
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . MINUS expression
    (22) expression -> . OPENPAR expression CLOSEPAR
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . ID

    MINUS           shift and go to state 18
    OPENPAR         shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 17
    ID              shift and go to state 32

    expression                     shift and go to state 33

state 20

    (12) statement -> PRINT . OPENPAR STRING CLOSEPAR EOL
    (13) statement -> PRINT . OPENPAR statement CLOSEPAR EOL

    OPENPAR         shift and go to state 34


state 21

    (14) statement -> ID . ASSIGN expression EOL
    (25) expression -> ID .

    ASSIGN          shift and go to state 35
    PLUS            reduce using rule 25 (expression -> ID .)
    MINUS           reduce using rule 25 (expression -> ID .)
    MUL             reduce using rule 25 (expression -> ID .)
    DIV             reduce using rule 25 (expression -> ID .)
    MOD             reduce using rule 25 (expression -> ID .)
    CLOSEPAR        reduce using rule 25 (expression -> ID .)
    END             reduce using rule 25 (expression -> ID .)


state 22

    (23) expression -> INT .

    EOL             reduce using rule 23 (expression -> INT .)
    PLUS            reduce using rule 23 (expression -> INT .)
    MINUS           reduce using rule 23 (expression -> INT .)
    MUL             reduce using rule 23 (expression -> INT .)
    DIV             reduce using rule 23 (expression -> INT .)
    MOD             reduce using rule 23 (expression -> INT .)
    CLOSEPAR        reduce using rule 23 (expression -> INT .)
    END             reduce using rule 23 (expression -> INT .)


state 23

    (4) decl -> type ID . EOL
    (6) decl -> type ID . ASSIGN expression EOL

    EOL             shift and go to state 36
    ASSIGN          shift and go to state 37


state 24

    (19) expression -> expression DIV . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . MINUS expression
    (22) expression -> . OPENPAR expression CLOSEPAR
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . ID

    MINUS           shift and go to state 18
    OPENPAR         shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 17
    ID              shift and go to state 32

    expression                     shift and go to state 38

state 25

    (16) expression -> expression PLUS . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . MINUS expression
    (22) expression -> . OPENPAR expression CLOSEPAR
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . ID

    MINUS           shift and go to state 18
    OPENPAR         shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 17
    ID              shift and go to state 32

    expression                     shift and go to state 39

state 26

    (20) expression -> expression MOD . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . MINUS expression
    (22) expression -> . OPENPAR expression CLOSEPAR
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . ID

    MINUS           shift and go to state 18
    OPENPAR         shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 17
    ID              shift and go to state 32

    expression                     shift and go to state 40

state 27

    (17) expression -> expression MINUS . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . MINUS expression
    (22) expression -> . OPENPAR expression CLOSEPAR
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . ID

    MINUS           shift and go to state 18
    OPENPAR         shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 17
    ID              shift and go to state 32

    expression                     shift and go to state 41

state 28

    (18) expression -> expression MUL . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . MINUS expression
    (22) expression -> . OPENPAR expression CLOSEPAR
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . ID

    MINUS           shift and go to state 18
    OPENPAR         shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 17
    ID              shift and go to state 32

    expression                     shift and go to state 42

state 29

    (27) endprog -> END . INT EOL

    INT             shift and go to state 43


state 30

    (1) progStart -> programHeading OPENCURLY decl statement endprog . CLOSECURLY

    CLOSECURLY      shift and go to state 44


state 31

    (21) expression -> MINUS expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression

    EOL             reduce using rule 21 (expression -> MINUS expression .)
    PLUS            reduce using rule 21 (expression -> MINUS expression .)
    MINUS           reduce using rule 21 (expression -> MINUS expression .)
    MUL             reduce using rule 21 (expression -> MINUS expression .)
    DIV             reduce using rule 21 (expression -> MINUS expression .)
    MOD             reduce using rule 21 (expression -> MINUS expression .)
    CLOSEPAR        reduce using rule 21 (expression -> MINUS expression .)
    END             reduce using rule 21 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 27 ]
  ! MUL             [ shift and go to state 28 ]
  ! DIV             [ shift and go to state 24 ]
  ! MOD             [ shift and go to state 26 ]


state 32

    (25) expression -> ID .

    EOL             reduce using rule 25 (expression -> ID .)
    PLUS            reduce using rule 25 (expression -> ID .)
    MINUS           reduce using rule 25 (expression -> ID .)
    MUL             reduce using rule 25 (expression -> ID .)
    DIV             reduce using rule 25 (expression -> ID .)
    MOD             reduce using rule 25 (expression -> ID .)
    END             reduce using rule 25 (expression -> ID .)
    CLOSEPAR        reduce using rule 25 (expression -> ID .)


state 33

    (22) expression -> OPENPAR expression . CLOSEPAR
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression

    CLOSEPAR        shift and go to state 45
    PLUS            shift and go to state 25
    MINUS           shift and go to state 27
    MUL             shift and go to state 28
    DIV             shift and go to state 24
    MOD             shift and go to state 26


state 34

    (12) statement -> PRINT OPENPAR . STRING CLOSEPAR EOL
    (13) statement -> PRINT OPENPAR . statement CLOSEPAR EOL
    (12) statement -> . PRINT OPENPAR STRING CLOSEPAR EOL
    (13) statement -> . PRINT OPENPAR statement CLOSEPAR EOL
    (14) statement -> . ID ASSIGN expression EOL
    (15) statement -> . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . MINUS expression
    (22) expression -> . OPENPAR expression CLOSEPAR
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . ID

    STRING          shift and go to state 46
    PRINT           shift and go to state 20
    ID              shift and go to state 21
    MINUS           shift and go to state 18
    OPENPAR         shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 17

    expression                     shift and go to state 15
    statement                      shift and go to state 47

state 35

    (14) statement -> ID ASSIGN . expression EOL
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . MINUS expression
    (22) expression -> . OPENPAR expression CLOSEPAR
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . ID

    MINUS           shift and go to state 18
    OPENPAR         shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 17
    ID              shift and go to state 32

    expression                     shift and go to state 48

state 36

    (4) decl -> type ID EOL .

    PRINT           reduce using rule 4 (decl -> type ID EOL .)
    ID              reduce using rule 4 (decl -> type ID EOL .)
    MINUS           reduce using rule 4 (decl -> type ID EOL .)
    OPENPAR         reduce using rule 4 (decl -> type ID EOL .)
    INT             reduce using rule 4 (decl -> type ID EOL .)
    FLOAT           reduce using rule 4 (decl -> type ID EOL .)


state 37

    (6) decl -> type ID ASSIGN . expression EOL
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression MUL expression
    (19) expression -> . expression DIV expression
    (20) expression -> . expression MOD expression
    (21) expression -> . MINUS expression
    (22) expression -> . OPENPAR expression CLOSEPAR
    (23) expression -> . INT
    (24) expression -> . FLOAT
    (25) expression -> . ID

    MINUS           shift and go to state 18
    OPENPAR         shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 17
    ID              shift and go to state 32

    expression                     shift and go to state 49

state 38

    (19) expression -> expression DIV expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression

    EOL             reduce using rule 19 (expression -> expression DIV expression .)
    PLUS            reduce using rule 19 (expression -> expression DIV expression .)
    MINUS           reduce using rule 19 (expression -> expression DIV expression .)
    MUL             reduce using rule 19 (expression -> expression DIV expression .)
    DIV             reduce using rule 19 (expression -> expression DIV expression .)
    MOD             reduce using rule 19 (expression -> expression DIV expression .)
    CLOSEPAR        reduce using rule 19 (expression -> expression DIV expression .)
    END             reduce using rule 19 (expression -> expression DIV expression .)

  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 27 ]
  ! MUL             [ shift and go to state 28 ]
  ! DIV             [ shift and go to state 24 ]
  ! MOD             [ shift and go to state 26 ]


state 39

    (16) expression -> expression PLUS expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression

    EOL             reduce using rule 16 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 16 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 16 (expression -> expression PLUS expression .)
    CLOSEPAR        reduce using rule 16 (expression -> expression PLUS expression .)
    END             reduce using rule 16 (expression -> expression PLUS expression .)
    MUL             shift and go to state 28
    DIV             shift and go to state 24
    MOD             shift and go to state 26

  ! MUL             [ reduce using rule 16 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 16 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 16 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 27 ]


state 40

    (20) expression -> expression MOD expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression

    EOL             reduce using rule 20 (expression -> expression MOD expression .)
    PLUS            reduce using rule 20 (expression -> expression MOD expression .)
    MINUS           reduce using rule 20 (expression -> expression MOD expression .)
    MUL             reduce using rule 20 (expression -> expression MOD expression .)
    DIV             reduce using rule 20 (expression -> expression MOD expression .)
    MOD             reduce using rule 20 (expression -> expression MOD expression .)
    CLOSEPAR        reduce using rule 20 (expression -> expression MOD expression .)
    END             reduce using rule 20 (expression -> expression MOD expression .)

  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 27 ]
  ! MUL             [ shift and go to state 28 ]
  ! DIV             [ shift and go to state 24 ]
  ! MOD             [ shift and go to state 26 ]


state 41

    (17) expression -> expression MINUS expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression

    EOL             reduce using rule 17 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 17 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 17 (expression -> expression MINUS expression .)
    CLOSEPAR        reduce using rule 17 (expression -> expression MINUS expression .)
    END             reduce using rule 17 (expression -> expression MINUS expression .)
    MUL             shift and go to state 28
    DIV             shift and go to state 24
    MOD             shift and go to state 26

  ! MUL             [ reduce using rule 17 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 17 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 17 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 27 ]


state 42

    (18) expression -> expression MUL expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression

    EOL             reduce using rule 18 (expression -> expression MUL expression .)
    PLUS            reduce using rule 18 (expression -> expression MUL expression .)
    MINUS           reduce using rule 18 (expression -> expression MUL expression .)
    MUL             reduce using rule 18 (expression -> expression MUL expression .)
    DIV             reduce using rule 18 (expression -> expression MUL expression .)
    MOD             reduce using rule 18 (expression -> expression MUL expression .)
    CLOSEPAR        reduce using rule 18 (expression -> expression MUL expression .)
    END             reduce using rule 18 (expression -> expression MUL expression .)

  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 27 ]
  ! MUL             [ shift and go to state 28 ]
  ! DIV             [ shift and go to state 24 ]
  ! MOD             [ shift and go to state 26 ]


state 43

    (27) endprog -> END INT . EOL

    EOL             shift and go to state 50


state 44

    (1) progStart -> programHeading OPENCURLY decl statement endprog CLOSECURLY .

    $end            reduce using rule 1 (progStart -> programHeading OPENCURLY decl statement endprog CLOSECURLY .)


state 45

    (22) expression -> OPENPAR expression CLOSEPAR .

    EOL             reduce using rule 22 (expression -> OPENPAR expression CLOSEPAR .)
    PLUS            reduce using rule 22 (expression -> OPENPAR expression CLOSEPAR .)
    MINUS           reduce using rule 22 (expression -> OPENPAR expression CLOSEPAR .)
    MUL             reduce using rule 22 (expression -> OPENPAR expression CLOSEPAR .)
    DIV             reduce using rule 22 (expression -> OPENPAR expression CLOSEPAR .)
    MOD             reduce using rule 22 (expression -> OPENPAR expression CLOSEPAR .)
    CLOSEPAR        reduce using rule 22 (expression -> OPENPAR expression CLOSEPAR .)
    END             reduce using rule 22 (expression -> OPENPAR expression CLOSEPAR .)


state 46

    (12) statement -> PRINT OPENPAR STRING . CLOSEPAR EOL

    CLOSEPAR        shift and go to state 51


state 47

    (13) statement -> PRINT OPENPAR statement . CLOSEPAR EOL

    CLOSEPAR        shift and go to state 52


state 48

    (14) statement -> ID ASSIGN expression . EOL
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression

    EOL             shift and go to state 53
    PLUS            shift and go to state 25
    MINUS           shift and go to state 27
    MUL             shift and go to state 28
    DIV             shift and go to state 24
    MOD             shift and go to state 26


state 49

    (6) decl -> type ID ASSIGN expression . EOL
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . MUL expression
    (19) expression -> expression . DIV expression
    (20) expression -> expression . MOD expression

    EOL             shift and go to state 54
    PLUS            shift and go to state 25
    MINUS           shift and go to state 27
    MUL             shift and go to state 28
    DIV             shift and go to state 24
    MOD             shift and go to state 26


state 50

    (27) endprog -> END INT EOL .

    CLOSECURLY      reduce using rule 27 (endprog -> END INT EOL .)


state 51

    (12) statement -> PRINT OPENPAR STRING CLOSEPAR . EOL

    EOL             shift and go to state 55


state 52

    (13) statement -> PRINT OPENPAR statement CLOSEPAR . EOL

    EOL             shift and go to state 56


state 53

    (14) statement -> ID ASSIGN expression EOL .

    END             reduce using rule 14 (statement -> ID ASSIGN expression EOL .)
    CLOSEPAR        reduce using rule 14 (statement -> ID ASSIGN expression EOL .)


state 54

    (6) decl -> type ID ASSIGN expression EOL .

    PRINT           reduce using rule 6 (decl -> type ID ASSIGN expression EOL .)
    ID              reduce using rule 6 (decl -> type ID ASSIGN expression EOL .)
    MINUS           reduce using rule 6 (decl -> type ID ASSIGN expression EOL .)
    OPENPAR         reduce using rule 6 (decl -> type ID ASSIGN expression EOL .)
    INT             reduce using rule 6 (decl -> type ID ASSIGN expression EOL .)
    FLOAT           reduce using rule 6 (decl -> type ID ASSIGN expression EOL .)


state 55

    (12) statement -> PRINT OPENPAR STRING CLOSEPAR EOL .

    END             reduce using rule 12 (statement -> PRINT OPENPAR STRING CLOSEPAR EOL .)
    CLOSEPAR        reduce using rule 12 (statement -> PRINT OPENPAR STRING CLOSEPAR EOL .)


state 56

    (13) statement -> PRINT OPENPAR statement CLOSEPAR EOL .

    END             reduce using rule 13 (statement -> PRINT OPENPAR statement CLOSEPAR EOL .)
    CLOSEPAR        reduce using rule 13 (statement -> PRINT OPENPAR statement CLOSEPAR EOL .)

